1. What is JavaScript? 
= JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc.



2. What is the use of isNaN function? 
= The JavaScript isNaN () Function is used to check whether a given value is an illegal number or not. It returns true if the value is a NaN else returns false.



3. What is negative Infinity? 
= The negative infinity in JavaScript is a constant value that is used to represent a value that is the lowest available. This means that no other number is lesser than this value. It can be generated using a self-made function or by an arithmetic operation. 



4. Which company developed JavaScript? 
=  Netscape Communications company in 1994 created Netscape Navigator that became the most popular web browser in the 90s.



5. What are undeclared and undefined variables? 
= Undefined: It occurs when a variable has been declared but has not been assigned any value. Undefined is not a keyword. 

Undeclared: It occurs when we try to access any variable that is not initialized or declared earlier using the var or const keyword. If we use ‘typeof’ operator to get the value of an undeclared variable, we will face the runtime error with the return value as “undefined”. The scope of the undeclared variables is always global. 



6. Write the code for adding new elements dynamically? 
= Creation of new element: New elements can be created in JS by using the createElement() method.  

Syntax:

document.createElement("<tagName>");  
// Where <tagName> can be any HTML 
// tagName like div, ul, button, etc.

// newDiv element has been created
For Eg: let newDiv = document.createElement("div");



7. What is the difference between ViewState and SessionState?
= viewState
 View State is a technique to maintain the state of controls during page post-back, meaning it stores the page value at the time of post-back (sending and receiving information from the server) of your page and the view state data can be used when the page is posted back to the server and a new instance of the page is created.

 SessionState 
 Session State is another state management technique to store state, meaning it helps in storing and using values from previous requests. Whenever the user requests a web form from a web application it will get treated as a new request. an ASP.NET session will be used to store the previous requests for a specified time period.



8. What is === operator? 
=    == operator is a type of Relational Operator in Java used to check for relations of equality. It returns a boolean result after the comparison and is extensively used in looping statements and conditional if-else statements. 



9. How can the style/class of an element be changed? 
= You can use the below-mentioned methods to add classes, remove classes, and toggle between different classes respectively.

The add() method: It adds one or more classes.
The remove() method: It removes one or more classes.
The toggle() method: If the class does not exist it adds it and returns true. It removes the class and returns false. The second boolean argument forces the class to be added or removed.



10. How to read and write a file using JavaScript? 
= The writeFile() method is used to write into the file in JavaScript
  writeFile(path,inputData,callBackFunction)

  the reading of the file in JavaScript can be done by using the readFile() function.
   readFile(path, format, callBackFunc)


11. What are all the looping structures in JavaScript?
= Looping in programming languages is a feature that facilitates the execution of a set of instructions/functions repeatedly while some condition evaluates to true.



12. How can you convert the string of any base to an integer in JavaScript? 
=   we would be using a method (or a function) provided by JavaScript called as parseInt(). 

This is a special method, provided by JavaScript, that takes an integer value (of any base which is either specified or not) and further converts the string into an integer value.



13. What is the function of the delete operator?
=  The delete operator removes a property from an object. If the property's value is an object and there are no more references to the object, the object held by that property is eventually released automatically.




14. What are all the types of Pop up boxes available in JavaScript? 
=  popup boxes are used to display the message or notification to the user. There are three types of pop-up boxes in JavaScript namely Alert Box, Confirm Box and Prompt Box.



15. What is the use of Void (0)?
=  You might have occasionally came across “javascript:void(0)” in an HTML Document. It is often used when inserting an expression in a web page might produce some unwanted effect. To remove this effect, “javascript:void(0)” is used. This expression returns undefined primitive value. This is often used with hyperlinks. Sometimes, you will decide to call some JavaScript from inside a link. Normally, when you click a link, the browser loads a brand new page or refreshes the same page (depending on the URL specified). But you most likely don’t desire this to happen if you have hooked up some JavaScript thereto link. To prevent the page from refreshing, you could use void(0). 



16. How can a page be forced to load another page in JavaScript?
= There are several methods to redirect to another webpage using JavaScript. Some of them are listed below:

location.href: It is used to set or return the complete URL of the current page.
location.replace(): It is used to replace the current document with the specified one.
location.assign(): It is used for loading a new document. 



17. What are the disadvantages of using innerHTML in JavaScript? 
= Disadvantages of using innerHTML property in JavaScript:

The use of innerHTML very slow: The process of using innerHTML is much slower as its contents as slowly built, also already parsed contents and elements are also re-parsed which takes time.

Preserves event handlers attached to any DOM elements: The event handlers do not get attached to the new elements created by setting innerHTML automatically. To do so one has to keep track of the event handlers and attach it to new elements manually. This may cause a memory leak on some browsers.

Content is replaced everywhere: Either you add, append, delete or modify contents on a webpage using innerHTML, all contents is replaced, also all the DOM nodes inside that element are reparsed and recreated.

Appending to innerHTML is not supported: Usually, += is used for appending in JavaScript. But on appending to an Html tag using innerHTML, the whole tag is re-parsed.


